{"version":3,"sources":["../webpack/bootstrap",".././node_modules/markdown-it/lib/common/utils.js",".././node_modules/uc.micro/categories/P/regex.js",".././node_modules/markdown-it/lib/ruler.js",".././node_modules/markdown-it/lib/token.js",".././node_modules/markdown-it/lib/common/entities.js",".././node_modules/mdurl/index.js",".././node_modules/uc.micro/properties/Any/regex.js",".././node_modules/uc.micro/categories/Cc/regex.js",".././node_modules/uc.micro/categories/Z/regex.js",".././node_modules/markdown-it/lib/common/html_re.js",".././node_modules/markdown-it/lib/rules_inline/strikethrough.js",".././node_modules/markdown-it/lib/rules_inline/emphasis.js",".././extension.js","../external \"vscode\"",".././node_modules/markdown-it/index.js",".././node_modules/markdown-it/lib/index.js",".././node_modules/mdurl/encode.js",".././node_modules/mdurl/decode.js",".././node_modules/mdurl/format.js",".././node_modules/mdurl/parse.js",".././node_modules/uc.micro/index.js",".././node_modules/uc.micro/categories/Cf/regex.js",".././node_modules/markdown-it/lib/helpers/index.js",".././node_modules/markdown-it/lib/helpers/parse_link_label.js",".././node_modules/markdown-it/lib/helpers/parse_link_destination.js",".././node_modules/markdown-it/lib/helpers/parse_link_title.js",".././node_modules/markdown-it/lib/renderer.js",".././node_modules/markdown-it/lib/parser_core.js",".././node_modules/markdown-it/lib/rules_core/normalize.js",".././node_modules/markdown-it/lib/rules_core/block.js",".././node_modules/markdown-it/lib/rules_core/inline.js",".././node_modules/markdown-it/lib/rules_core/linkify.js",".././node_modules/markdown-it/lib/rules_core/replacements.js",".././node_modules/markdown-it/lib/rules_core/smartquotes.js",".././node_modules/markdown-it/lib/rules_core/state_core.js",".././node_modules/markdown-it/lib/parser_block.js",".././node_modules/markdown-it/lib/rules_block/table.js",".././node_modules/markdown-it/lib/rules_block/code.js",".././node_modules/markdown-it/lib/rules_block/fence.js",".././node_modules/markdown-it/lib/rules_block/blockquote.js",".././node_modules/markdown-it/lib/rules_block/hr.js",".././node_modules/markdown-it/lib/rules_block/list.js",".././node_modules/markdown-it/lib/rules_block/reference.js",".././node_modules/markdown-it/lib/rules_block/heading.js",".././node_modules/markdown-it/lib/rules_block/lheading.js",".././node_modules/markdown-it/lib/rules_block/html_block.js",".././node_modules/markdown-it/lib/common/html_blocks.js",".././node_modules/markdown-it/lib/rules_block/paragraph.js",".././node_modules/markdown-it/lib/rules_block/state_block.js",".././node_modules/markdown-it/lib/parser_inline.js",".././node_modules/markdown-it/lib/rules_inline/text.js",".././node_modules/markdown-it/lib/rules_inline/newline.js",".././node_modules/markdown-it/lib/rules_inline/escape.js",".././node_modules/markdown-it/lib/rules_inline/backticks.js",".././node_modules/markdown-it/lib/rules_inline/link.js",".././node_modules/markdown-it/lib/rules_inline/image.js",".././node_modules/markdown-it/lib/rules_inline/autolink.js",".././node_modules/markdown-it/lib/rules_inline/html_inline.js",".././node_modules/markdown-it/lib/rules_inline/entity.js",".././node_modules/markdown-it/lib/rules_inline/balance_pairs.js",".././node_modules/markdown-it/lib/rules_inline/text_collapse.js",".././node_modules/markdown-it/lib/rules_inline/state_inline.js",".././node_modules/linkify-it/index.js",".././node_modules/linkify-it/lib/re.js","../external \"punycode\"",".././node_modules/markdown-it/lib/presets/default.js",".././node_modules/markdown-it/lib/presets/zero.js",".././node_modules/markdown-it/lib/presets/commonmark.js","../external \"fs\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_hasOwnProperty","has","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","Ruler","this","__rules__","__cache__","__find__","length","__compile__","self","chains","rule","enabled","alt","altName","push","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","attrGet","attrJoin","encode","decode","format","parse","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","vscode","MarkdownIt","fs","md","activate","context","subscriptions","commands","registerCommand","file","window","activeTextEditor","document","fileName","console","log","panel","createWebviewPanel","ViewColumn","Beside","setHtml","onDidChangeActiveTextEditor","e","_documentData","_document","workspace","onDidChangeTextDocument","absPath","webview","html","render","text","readFileSync","split","getContent","title","arr","getName","deactivate","require","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","presetName","inline","core","renderer","linkify","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","filter","use","plugin","args","apply","env","State","process","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","nextCode","cache","defaultChars","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","join","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","eMarks","escapedSplit","escapes","backTicked","lastBackTick","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","tShift","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","wasOutdented","oldLineMax","bsCount","parentType","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","StateBlock","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require(\"vscode\");\nconst MarkdownIt = require(\"markdown-it\");\nconst fs = require(\"fs\");\nconst md = new MarkdownIt();\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n\n// console.log(\"Vscode Extension\");\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"markdownPreview.start\", () => {\n      const file = vscode.window.activeTextEditor.document.fileName;\n      console.log(file);\n      // Create and show a new webview\n      const panel = vscode.window.createWebviewPanel(\n        \"markdown\", // Identifies the type of the webview. Used internally\n        \"Markdown Preview\", // Title of the panel displayed to the user\n        vscode.ViewColumn.Beside, // Editor column to show in different panel\n        {} // Webview options. More on these later.\n      );\n      console.log(\"in\");\n      file && setHtml(panel, file);\n      // when text editor change\n      vscode.window.onDidChangeActiveTextEditor((e) => {\n        console.log(\"open\");\n\n        console.log(e);\n        setHtml(panel, e._documentData._document.fileName);\n      });\n      // when saved text document\n      vscode.workspace.onDidChangeTextDocument((e) => {\n        console.log(\"changed\");\n        console.log(e);\n\n        setHtml(panel, e.document.fileName);\n      });\n    })\n  );\n}\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\nfunction deactivate() {}\n\nfunction getName(absPath) {\n  const arr = absPath.split(\"/\");\n  return arr[arr.length - 1];\n}\n\nfunction getContent(absPath) {\n  const text = fs.readFileSync(absPath).toString().split(\"---\");\n  return `${text[text.length - 1]}`;\n}\n\nfunction setHtml(panel, absPath) {\n  panel.webview.html = md.render(getContent(absPath));\n  panel.title = getName(absPath);\n}\nmodule.exports = {\n  activate,\n  deactivate,\n};\n","module.exports = require(\"vscode\");","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open &&\n          opener.end < 0 &&\n          opener.level === closer.level) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","module.exports = require(\"punycode\");","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","module.exports = require(\"fs\");"],"sourceRoot":""}